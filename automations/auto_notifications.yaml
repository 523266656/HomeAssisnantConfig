#################################################
# Notifications
#################################################

- alias: 'Home Presence Alert'
  initial_state: true
  trigger:
    platform: state
    entity_id: person.alexander, person.irina, person.galina, person.tatiana, person.olga
#    entity_id: person.alexander, person.irina, person.olga
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ states('sensor.uptime') != '0.0' }}"
      - condition: template
        value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  action:
    - service: notify.telegram_stall
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }}
          {% if trigger.to_state.state == 'home' %}дома!
          {% else %}скорее всего вне дома.
          {% endif %}

- alias: 'HASS: Home Assistant Start'
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: notify.telegram_stall
    data:
      message: "_INFO:_ Home Assistant *запущен*."

- alias: 'HASS: Home Assistant Shutdown'
  initial_state: true
  trigger:
    platform: homeassistant
    event: shutdown
  action:
    - service: notify.telegram_stall
      data:
        message: "_INFO:_ Home Assistant *остановлен*."

- alias: 'HASS: ERRORs in System Log [notify to stall]'
  initial_state: false
  trigger:
    platform: event
    event_type: system_log_event
    event_data:
      level: ERROR
  action:
    - service: notify.telegram_stall
      data_template:
        message: "_{{ trigger.event.data.level }}:_ {{ trigger.event.data.message }}"

- alias: 'HASS: WARNINGs in System Log [notify to stall]'
  initial_state: false
  trigger:
    platform: event
    event_type: system_log_event
    event_data:
      level: WARNING
  action:
    - service: notify.telegram_stall
      data_template:
        message: "_{{ trigger.event.data.level }}:_ {{ trigger.event.data.message }}"

- alias: 'HASSIO: New Version Available [notify to stall]'
  initial_state: true
  trigger:
    platform: template
    value_template: "{{ states('sensor.current_version') < states('sensor.latest_version') }}"
  action:
    service: notify.telegram_stall
    data_template:
      message: "_INFO:_ Доступна новая версия Home Assistant ({{ states('sensor.latest_version') }})"

- alias: 'HACS: New Component Version Available [notify to stall]'
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ (states('sensor.hacs') | int) > 0 }}"
  action:
    service: notify.telegram_stall
    data_template:
      message: "_INFO:_ Доступны новые версии установленных компонент (кол-во: {{ states('sensor.hacs') }})"

- alias: Torrent Completed [notify to stall]
  initial_state: true
  trigger:
    platform: event
    event_type: transmission_downloaded_torrent
  action:
    service: notify.telegram_stall
    data_template:
      message: "Загрузка torrent-файла завершена"

- alias: Полнолуние [notify to stall]
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.moon
    to: "full_moon"
  action:
    service: notify.telegram_stall
    data_template:
      message: "Сегодня полнолуние!"

#- alias: Оповещение о протечке [notify to stall]
#  initial_state: true
#  trigger:
#    platform: state
#    entity_id: binary_sensor.sauresha_5555_000111
#    to: "True"
#  action:
#    service: notify.telegram_stall
#    data:
#      title: "*Внимание!*"
#      message: |
#        Сработал датчик протечки.
#        Водопроводные краны перекрыты!

- alias: Оповещение о протечке Aqara в Кладовой [notify to stall]
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.water_leak_sensor_158d000400e77d
    from: "off"
    to: "on"
  action:
    service: notify.telegram_stall
    data:
      title: "*Внимание!*"
      message: |
        Сработал датчик протечки Aqara в *Кладовой*.
        Необходимо проверить наличие воды за стиральной машиной. 

- alias: 'Low Battery Alert'
  initial_state: true
  trigger:
    platform: numeric_state
    entity_id:
      - sensor.battery_status_158d0003230618
      - sensor.battery_status_158d0003931aec
      - sensor.battery_status_158d0003931b0e
      - sensor.battery_status_158d00035ff631
      - sensor.battery_status_158d0003045123
      - sensor.battery_status_158d0003931a55
      - sensor.battery_status_158d00039e2ecb
      - sensor.battery_status_158d000400e77d
      - sensor.battery_status_158d000309920a
      - sensor.battery_status_158d00044cea8e
      - sensor.battery_status_158d00031c790f
      - sensor.battery_status_158d00039cf974
      - sensor.battery_status_158d0004073b67
      - sensor.battery_status_158d0003d54725
      - sensor.battery_status_158d00033efd9e
    below: 15
  action:
    - service: notify.telegram_stall
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} {{ trigger.to_state.state }}%!

- alias: Entrance Door - Opened
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.door_window_sensor_158d00031c790f
    from: 'off'
    to: 'on'
  action:
    service: notify.telegram_stall
    data:
      message: Открыта входная дверь!

- alias: Entrance Door - Closed
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.door_window_sensor_158d00031c790f
    from: 'on'
    to: 'off'
  action:
    service: notify.telegram_stall
    data:
      message: Входная дверь закрыта.

- alias: Gas Alert
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.natgas_sensor_158d000413b210
    from: 'off'
    to: 'on'
  action:
    service: notify.telegram_stall
    data:
      title: "*Внимание!*"
      message: |
        Сработал датчик *газа* на кухне.
        Откройте окна и перекройте подачу газа (за холодильником).